"use strict";(self.webpackChunkreact_parallax_tilt=self.webpackChunkreact_parallax_tilt||[]).push([[935],{"./stories/ReactParallaxTilt.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>ReactParallaxTilt_stories_Default,EventParams:()=>ReactParallaxTilt_stories_EventParams,EventTiltAngle:()=>ReactParallaxTilt_stories_EventTiltAngle,FlipPage:()=>ReactParallaxTilt_stories_FlipPage,FlipVH:()=>ReactParallaxTilt_stories_FlipVH,GlareEffect:()=>ReactParallaxTilt_stories_GlareEffect,GlareEffect360:()=>ReactParallaxTilt_stories_GlareEffect360,GlareEffectNoTilt:()=>ReactParallaxTilt_stories_GlareEffectNoTilt,Gyroscope:()=>ReactParallaxTilt_stories_Gyroscope,InitialTilt:()=>InitialTilt,KeepFloating:()=>ReactParallaxTilt_stories_KeepFloating,MultipleTilt:()=>ReactParallaxTilt_stories_MultipleTilt,MultipleTiltScroll:()=>ReactParallaxTilt_stories_MultipleTiltScroll,ParallaxEffect:()=>ReactParallaxTilt_stories_ParallaxEffect,ParallaxEffectGlareScale:()=>ReactParallaxTilt_stories_ParallaxEffectGlareScale,ParallaxEffectImg:()=>ReactParallaxTilt_stories_ParallaxEffectImg,ReverseTilt:()=>ReactParallaxTilt_stories_ReverseTilt,Scale:()=>Scale,ScaleNoTilt:()=>ReactParallaxTilt_stories_ScaleNoTilt,TiltDisableAxis:()=>ReactParallaxTilt_stories_TiltDisableAxis,TiltImg:()=>ReactParallaxTilt_stories_TiltImg,TiltManualInput:()=>ReactParallaxTilt_stories_TiltManualInput,TrackOnWindow:()=>ReactParallaxTilt_stories_TrackOnWindow,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ReactParallaxTilt_stories});var react=__webpack_require__("./node_modules/react/index.js"),index_esm=__webpack_require__("./node_modules/react-demo-tab/dist/index.esm.js");const setTransition=(element,property,duration,timing)=>{element.style.transition=`${property} ${duration}ms ${timing}`},constrainToRange=(value,rangeMin,rangeMax)=>Math.min(Math.max(value,rangeMin),rangeMax);class Glare{glareAngle=0;glareOpacity=0;constructor(wrapperElSize,glareBorderRadius){this.glareWrapperEl=document.createElement("div"),this.glareEl=document.createElement("div"),this.glareWrapperEl.appendChild(this.glareEl),this.glareWrapperEl.className="glare-wrapper",this.glareEl.className="glare";const styleGlareWrapper={position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden",borderRadius:glareBorderRadius,WebkitMaskImage:"-webkit-radial-gradient(white, black)",pointerEvents:"none"},glareSize=this.calculateGlareSize(wrapperElSize),styleGlare={position:"absolute",top:"50%",left:"50%",transformOrigin:"0% 0%",pointerEvents:"none",width:`${glareSize.width}px`,height:`${glareSize.height}px`};Object.assign(this.glareWrapperEl.style,styleGlareWrapper),Object.assign(this.glareEl.style,styleGlare)}calculateGlareSize=wrapperElSize=>{const{width,height}=wrapperElSize,wrapperElDiagonal=Math.sqrt(width**2+height**2);return{width:wrapperElDiagonal,height:wrapperElDiagonal}};setSize=wrapperElSize=>{const glareSize=this.calculateGlareSize(wrapperElSize);this.glareEl.style.width=`${glareSize.width}px`,this.glareEl.style.height=`${glareSize.height}px`};update=(wrapperElClientPosition,props,flipVertically,flipHorizontally)=>{this.updateAngle(wrapperElClientPosition,props.glareReverse),this.updateOpacity(wrapperElClientPosition,props,flipVertically,flipHorizontally)};updateAngle=(wrapperElClientPosition,glareReverse)=>{const{xPercentage,yPercentage}=wrapperElClientPosition,rad2Deg=180/Math.PI,glareAngle=xPercentage?Math.atan2(yPercentage,-xPercentage)*rad2Deg:0,addGlareAngle=glareReverse?180:0;this.glareAngle=glareAngle-addGlareAngle};updateOpacity=(wrapperElClientPosition,props,flipVertically,flipHorizontally)=>{const{xPercentage,yPercentage}=wrapperElClientPosition,{glarePosition,glareReverse,glareMaxOpacity}=props,flipVerticallyFactor=flipVertically?-1:1,flipHorizontallyFactor=flipHorizontally?-1:1,glareReverseFactor=glareReverse?-1:1;let glareOpacityFactor=0;switch(glarePosition){case"top":glareOpacityFactor=-xPercentage*flipVerticallyFactor*glareReverseFactor;break;case"right":glareOpacityFactor=yPercentage*flipHorizontallyFactor*glareReverseFactor;break;case"bottom":case void 0:glareOpacityFactor=xPercentage*flipVerticallyFactor*glareReverseFactor;break;case"left":glareOpacityFactor=-yPercentage*flipHorizontallyFactor*glareReverseFactor;break;case"all":glareOpacityFactor=Math.hypot(xPercentage,yPercentage)}const glareOpacityFactorRemoveNegative=constrainToRange(glareOpacityFactor,0,100);this.glareOpacity=glareOpacityFactorRemoveNegative*glareMaxOpacity/100};render=props=>{const{glareColor}=props;this.glareEl.style.transform=`rotate(${this.glareAngle}deg) translate(-50%, -50%)`,this.glareEl.style.opacity=this.glareOpacity.toString(),this.glareEl.style.background=`linear-gradient(0deg, rgba(255,255,255,0) 0%, ${glareColor} 100%)`}}class Tilt{glareAngle=0;glareOpacity=0;tiltAngleX=0;tiltAngleY=0;tiltAngleXPercentage=0;tiltAngleYPercentage=0;update=(wrapperElClientPosition,props)=>{this.updateTilt(wrapperElClientPosition,props),this.updateTiltManualInput(wrapperElClientPosition,props),this.updateTiltReverse(props),this.updateTiltLimits(props)};updateTilt=(wrapperElClientPosition,props)=>{const{xPercentage,yPercentage}=wrapperElClientPosition,{tiltMaxAngleX,tiltMaxAngleY}=props;this.tiltAngleX=xPercentage*tiltMaxAngleX/100,this.tiltAngleY=yPercentage*tiltMaxAngleY/100*-1};updateTiltManualInput=(wrapperElClientPosition,props)=>{const{tiltAngleXManual,tiltAngleYManual,tiltMaxAngleX,tiltMaxAngleY}=props;(null!==tiltAngleXManual||null!==tiltAngleYManual)&&(this.tiltAngleX=null!==tiltAngleXManual?tiltAngleXManual:0,this.tiltAngleY=null!==tiltAngleYManual?tiltAngleYManual:0,wrapperElClientPosition.xPercentage=100*this.tiltAngleX/tiltMaxAngleX,wrapperElClientPosition.yPercentage=100*this.tiltAngleY/tiltMaxAngleY)};updateTiltReverse=props=>{const tiltReverse=props.tiltReverse?-1:1;this.tiltAngleX=tiltReverse*this.tiltAngleX,this.tiltAngleY=tiltReverse*this.tiltAngleY};updateTiltLimits=props=>{const{tiltAxis}=props;this.tiltAngleX=constrainToRange(this.tiltAngleX,-90,90),this.tiltAngleY=constrainToRange(this.tiltAngleY,-90,90);tiltAxis&&(this.tiltAngleX="x"===tiltAxis?this.tiltAngleX:0,this.tiltAngleY="y"===tiltAxis?this.tiltAngleY:0)};updateTiltAnglesPercentage=props=>{const{tiltMaxAngleX,tiltMaxAngleY}=props;this.tiltAngleXPercentage=this.tiltAngleX/tiltMaxAngleX*100,this.tiltAngleYPercentage=this.tiltAngleY/tiltMaxAngleY*100};render=element=>{element.style.transform+=`rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `}}const defaultProps={scale:1,perspective:1e3,flipVertically:!1,flipHorizontally:!1,reset:!0,transitionEasing:"cubic-bezier(.03,.98,.52,.99)",transitionSpeed:400,trackOnWindow:!1,gyroscope:!1,...{tiltEnable:!0,tiltReverse:!1,tiltAngleXInitial:0,tiltAngleYInitial:0,tiltMaxAngleX:20,tiltMaxAngleY:20,tiltAxis:void 0,tiltAngleXManual:null,tiltAngleYManual:null},glareEnable:!1,glareMaxOpacity:.7,glareColor:"#ffffff",glarePosition:"bottom",glareReverse:!1,glareBorderRadius:"0"};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");class ReactParallaxTilt extends react.PureComponent{static defaultProps=defaultProps;wrapperEl={node:null,size:{width:0,height:0,left:0,top:0},clientPosition:{x:null,y:null,xPercentage:0,yPercentage:0},updateAnimationId:null,scale:1};tilt=null;glare=null;componentDidMount(){if(this.tilt=new Tilt,this.initGlare(),this.addEventListeners(),"undefined"==typeof CustomEvent)return;const autoreset=new CustomEvent("autoreset");this.mainLoop(autoreset);const initialEvent=new CustomEvent("initial");this.emitOnMove(initialEvent)}componentWillUnmount(){null!==this.wrapperEl.updateAnimationId&&cancelAnimationFrame(this.wrapperEl.updateAnimationId),this.removeEventListeners()}componentDidUpdate(){const eventType=new CustomEvent("propChange");this.mainLoop(eventType),this.emitOnMove(eventType)}addEventListeners(){const{trackOnWindow,gyroscope}=this.props;window.addEventListener("resize",this.setSize),trackOnWindow&&(window.addEventListener("mouseenter",this.onEnter),window.addEventListener("mousemove",this.onMove),window.addEventListener("mouseout",this.onLeave),window.addEventListener("touchstart",this.onEnter),window.addEventListener("touchmove",this.onMove),window.addEventListener("touchend",this.onLeave)),gyroscope&&this.addDeviceOrientationEventListener()}addDeviceOrientationEventListener=async()=>{if(!window.DeviceOrientationEvent)return;const requestPermission=DeviceOrientationEvent.requestPermission;if("function"==typeof requestPermission){"granted"===await requestPermission()&&window.addEventListener("deviceorientation",this.onMove)}else window.addEventListener("deviceorientation",this.onMove)};removeEventListeners(){const{trackOnWindow,gyroscope}=this.props;window.removeEventListener("resize",this.setSize),trackOnWindow&&(window.removeEventListener("mouseenter",this.onEnter),window.removeEventListener("mousemove",this.onMove),window.removeEventListener("mouseout",this.onLeave),window.removeEventListener("touchstart",this.onEnter),window.removeEventListener("touchmove",this.onMove),window.removeEventListener("touchend",this.onLeave)),gyroscope&&window.DeviceOrientationEvent&&window.removeEventListener("deviceorientation",this.onMove)}setSize=()=>{this.setWrapperElSize(),this.glare&&this.glare.setSize(this.wrapperEl.size)};setWrapperElSize(){const rect=this.wrapperEl.node.getBoundingClientRect();this.wrapperEl.size.width=this.wrapperEl.node.offsetWidth,this.wrapperEl.size.height=this.wrapperEl.node.offsetHeight,this.wrapperEl.size.left=rect.left+window.scrollX,this.wrapperEl.size.top=rect.top+window.scrollY}initGlare(){const{glareEnable,glareBorderRadius}=this.props;glareEnable&&(this.glare=new Glare(this.wrapperEl.size,glareBorderRadius),this.wrapperEl.node.appendChild(this.glare.glareWrapperEl))}mainLoop=event=>{null!==this.wrapperEl.updateAnimationId&&cancelAnimationFrame(this.wrapperEl.updateAnimationId),this.processInput(event),this.update(event.type),this.wrapperEl.updateAnimationId=requestAnimationFrame(this.renderFrame)};onEnter=event=>{const{onEnter}=this.props;this.setSize(),this.wrapperEl.node.style.willChange="transform",this.setTransitions(),onEnter&&onEnter(event.type)};onMove=event=>{this.mainLoop(event),this.emitOnMove(event)};emitOnMove(event){const{onMove}=this.props;if(!onMove)return;let glareAngle=0,glareOpacity=0;this.glare&&(glareAngle=this.glare.glareAngle,glareOpacity=this.glare.glareOpacity),onMove({tiltAngleX:this.tilt.tiltAngleX,tiltAngleY:this.tilt.tiltAngleY,tiltAngleXPercentage:this.tilt.tiltAngleXPercentage,tiltAngleYPercentage:this.tilt.tiltAngleYPercentage,glareAngle,glareOpacity,eventType:event.type})}onLeave=event=>{const{onLeave}=this.props;if(this.setTransitions(),onLeave&&onLeave(event.type),this.props.reset){const autoResetEvent=new CustomEvent("autoreset");this.onMove(autoResetEvent)}};processInput=event=>{const{scale}=this.props;switch(event.type){case"mousemove":this.wrapperEl.clientPosition.x=event.pageX,this.wrapperEl.clientPosition.y=event.pageY,this.wrapperEl.scale=scale;break;case"touchmove":this.wrapperEl.clientPosition.x=event.touches[0].pageX,this.wrapperEl.clientPosition.y=event.touches[0].pageY,this.wrapperEl.scale=scale;break;case"deviceorientation":this.processInputDeviceOrientation(event),this.wrapperEl.scale=scale;break;case"autoreset":const{tiltAngleXInitial,tiltAngleYInitial,tiltMaxAngleX,tiltMaxAngleY}=this.props,xPercentage=tiltAngleXInitial/tiltMaxAngleX*100,yPercentage=tiltAngleYInitial/tiltMaxAngleY*100;this.wrapperEl.clientPosition.xPercentage=constrainToRange(xPercentage,-100,100),this.wrapperEl.clientPosition.yPercentage=constrainToRange(yPercentage,-100,100),this.wrapperEl.scale=1}};processInputDeviceOrientation=event=>{if(!event.gamma||!event.beta||!this.props.gyroscope)return;const{tiltMaxAngleX,tiltMaxAngleY}=this.props,angleX=event.beta,angleY=event.gamma;this.wrapperEl.clientPosition.xPercentage=angleX/tiltMaxAngleX*100,this.wrapperEl.clientPosition.yPercentage=angleY/tiltMaxAngleY*100,this.wrapperEl.clientPosition.xPercentage=constrainToRange(this.wrapperEl.clientPosition.xPercentage,-100,100),this.wrapperEl.clientPosition.yPercentage=constrainToRange(this.wrapperEl.clientPosition.yPercentage,-100,100)};update=eventType=>{const{tiltEnable,flipVertically,flipHorizontally}=this.props;"autoreset"!==eventType&&"deviceorientation"!==eventType&&"propChange"!==eventType&&this.updateClientInput(),tiltEnable&&this.tilt.update(this.wrapperEl.clientPosition,this.props),this.updateFlip(),this.tilt.updateTiltAnglesPercentage(this.props),this.glare&&this.glare.update(this.wrapperEl.clientPosition,this.props,flipVertically,flipHorizontally)};updateClientInput=()=>{const{trackOnWindow}=this.props;let xTemp,yTemp;if(trackOnWindow){const{x,y}=this.wrapperEl.clientPosition;xTemp=y/window.innerHeight*200-100,yTemp=x/window.innerWidth*200-100}else{const{size:{width,height,left,top},clientPosition:{x,y}}=this.wrapperEl;xTemp=(y-top)/height*200-100,yTemp=(x-left)/width*200-100}this.wrapperEl.clientPosition.xPercentage=constrainToRange(xTemp,-100,100),this.wrapperEl.clientPosition.yPercentage=constrainToRange(yTemp,-100,100)};updateFlip=()=>{const{flipVertically,flipHorizontally}=this.props;flipVertically&&(this.tilt.tiltAngleX+=180,this.tilt.tiltAngleY*=-1),flipHorizontally&&(this.tilt.tiltAngleY+=180)};renderFrame=()=>{this.resetWrapperElTransform(),this.renderPerspective(),this.tilt.render(this.wrapperEl.node),this.renderScale(),this.glare&&this.glare.render(this.props)};resetWrapperElTransform(){this.wrapperEl.node.style.transform=""}renderPerspective(){const{perspective}=this.props;this.wrapperEl.node.style.transform+=`perspective(${perspective}px) `}renderScale(){const{scale}=this.wrapperEl;this.wrapperEl.node.style.transform+=`scale3d(${scale},${scale},${scale})`}setTransitions(){const{transitionSpeed,transitionEasing}=this.props;setTransition(this.wrapperEl.node,"all",transitionSpeed,transitionEasing),this.glare&&setTransition(this.glare.glareEl,"opacity",transitionSpeed,transitionEasing)}render(){const{children,className,style}=this.props;return(0,jsx_runtime.jsx)("div",{ref:el=>this.wrapperEl.node=el,onMouseEnter:this.onEnter,onMouseMove:this.onMove,onMouseLeave:this.onLeave,onTouchStart:this.onEnter,onTouchMove:this.onMove,onTouchEnd:this.onLeave,className,style,children})}}ReactParallaxTilt.displayName="ReactParallaxTilt";const DefaultComponent=()=>(0,jsx_runtime.jsxs)("div",{className:"default-component",children:[(0,jsx_runtime.jsx)("div",{children:"React"}),(0,jsx_runtime.jsx)("div",{children:"Parallax Tilt"}),(0,jsx_runtime.jsx)("div",{children:"👀"})]});DefaultComponent.displayName="DefaultComponent";const Default=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})});Default.displayName="Default";const Default_demozap=Default,_Default=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst Default = () => (\n  <Tilt>\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default Default;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(Default_demozap,{})});_Default.displayName="_Default";const EventParams=()=>{const[eventParams,setEventParams]=(0,react.useState)({tiltAngleX:0,tiltAngleY:0,tiltAngleXPercentage:0,tiltAngleYPercentage:0,glareAngle:0,glareOpacity:0}),[evenDescription,setEvenDescription]=(0,react.useState)(null),[selectedEvents,setSelectedEvents]=(0,react.useState)({trackOnMove:!0,trackOnEnter:!0,trackOnLeave:!0}),toggleCheck=event=>{const{name,checked}=event.target;setEvenDescription(null),setSelectedEvents((selectedEvents=>({...selectedEvents,[name]:checked})))};return(0,jsx_runtime.jsxs)("div",{className:"event-params",children:[(0,jsx_runtime.jsx)(ReactParallaxTilt,{onMove:({eventType,...restEventParams})=>{JSON.stringify(restEventParams)!==JSON.stringify(eventParams)&&(selectedEvents.trackOnMove&&setEvenDescription(`Event 'onMove' triggered by '${eventType}' event type.`),setEventParams(restEventParams))},onEnter:eventType=>{selectedEvents.trackOnEnter&&setEvenDescription(`Event 'onEnter' triggered by '${eventType}' event type.`)},onLeave:eventType=>{selectedEvents.trackOnLeave&&setEvenDescription(`Event 'onLeave' triggered by '${eventType}' event type.`)},glareEnable:!0,glareMaxOpacity:1,glareColor:"white",gyroscope:!0,children:(0,jsx_runtime.jsxs)("div",{className:"react-parallax-tilt",children:[(0,jsx_runtime.jsx)("div",{className:"header",children:"Axis x"}),(0,jsx_runtime.jsxs)("div",{children:[eventParams.tiltAngleX.toFixed(2),"° / ",eventParams.tiltAngleXPercentage.toFixed(2),"%"]}),(0,jsx_runtime.jsx)("div",{className:"header",children:"Axis y"}),(0,jsx_runtime.jsxs)("div",{children:[eventParams.tiltAngleY.toFixed(2),"° / ",eventParams.tiltAngleYPercentage.toFixed(2),"%"]}),(0,jsx_runtime.jsx)("div",{className:"header",children:"Glare angle"}),(0,jsx_runtime.jsxs)("div",{children:[eventParams.glareAngle.toFixed(2),"°"]}),(0,jsx_runtime.jsx)("div",{className:"header",children:"Glare opacity"}),(0,jsx_runtime.jsx)("div",{children:eventParams.glareOpacity.toFixed(2)})]})}),(0,jsx_runtime.jsxs)("div",{className:"event-type",children:["Track events:",(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:toggleCheck,checked:selectedEvents.trackOnMove,name:"trackOnMove",type:"checkbox"}),"onMove"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:toggleCheck,checked:selectedEvents.trackOnEnter,name:"trackOnEnter",type:"checkbox"}),"onEnter"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:toggleCheck,checked:selectedEvents.trackOnLeave,name:"trackOnLeave",type:"checkbox"}),"onLeave"]}),evenDescription&&(0,jsx_runtime.jsx)("div",{children:evenDescription})]})]})};EventParams.displayName="EventParams";const EventParams_demozap=EventParams,_EventParams=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React, { useState, ChangeEvent } from 'react';\n\nimport Tilt, { OnMoveParams } from 'index';\n\nimport './EventParams.demozap.scss';\n\ntype SelectedEvents = {\n  trackOnMove: boolean;\n  trackOnEnter: boolean;\n  trackOnLeave: boolean;\n};\n\nconst EventParams = () => {\n  const [eventParams, setEventParams] = useState<Omit<OnMoveParams, 'eventType'>>({\n    tiltAngleX: 0,\n    tiltAngleY: 0,\n    tiltAngleXPercentage: 0,\n    tiltAngleYPercentage: 0,\n    glareAngle: 0,\n    glareOpacity: 0,\n  });\n  const [evenDescription, setEvenDescription] = useState<string | null>(null);\n\n  const [selectedEvents, setSelectedEvents] = useState<SelectedEvents>({\n    trackOnMove: true,\n    trackOnEnter: true,\n    trackOnLeave: true,\n  });\n\n  const onMove = ({ eventType, ...restEventParams }: OnMoveParams) => {\n    if (JSON.stringify(restEventParams) === JSON.stringify(eventParams)) {\n      return;\n    }\n\n    if (selectedEvents.trackOnMove) {\n      setEvenDescription(`Event 'onMove' triggered by '${eventType}' event type.`);\n    }\n\n    setEventParams(restEventParams);\n  };\n\n  const onEnter = (eventType: string) => {\n    if (selectedEvents.trackOnEnter) {\n      setEvenDescription(`Event 'onEnter' triggered by '${eventType}' event type.`);\n    }\n  };\n\n  const onLeave = (eventType: string) => {\n    if (selectedEvents.trackOnLeave) {\n      setEvenDescription(`Event 'onLeave' triggered by '${eventType}' event type.`);\n    }\n  };\n\n  const toggleCheck = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n\n    setEvenDescription(null);\n    setSelectedEvents((selectedEvents) => ({\n      ...selectedEvents,\n      [name]: checked,\n    }));\n  };\n\n  return (\n    <div className=\"event-params\">\n      <Tilt\n        onMove={onMove}\n        onEnter={onEnter}\n        onLeave={onLeave}\n        glareEnable={true}\n        glareMaxOpacity={1.0}\n        glareColor=\"white\"\n        gyroscope={true}\n      >\n        <div className=\"react-parallax-tilt\">\n          <div className=\"header\">Axis x</div>\n          <div>\n            {eventParams.tiltAngleX.toFixed(2)}° / {eventParams.tiltAngleXPercentage.toFixed(2)}%\n          </div>\n          <div className=\"header\">Axis y</div>\n          <div>\n            {eventParams.tiltAngleY.toFixed(2)}° / {eventParams.tiltAngleYPercentage.toFixed(2)}%\n          </div>\n          <div className=\"header\">Glare angle</div>\n          <div>{eventParams.glareAngle.toFixed(2)}°</div>\n          <div className=\"header\">Glare opacity</div>\n          <div>{eventParams.glareOpacity.toFixed(2)}</div>\n        </div>\n      </Tilt>\n      <div className=\"event-type\">\n        Track events:\n        <label>\n          <input onChange={toggleCheck} checked={selectedEvents.trackOnMove} name={'trackOnMove'} type=\"checkbox\" />\n          onMove\n        </label>\n        <label>\n          <input onChange={toggleCheck} checked={selectedEvents.trackOnEnter} name={'trackOnEnter'} type=\"checkbox\" />\n          onEnter\n        </label>\n        <label>\n          <input onChange={toggleCheck} checked={selectedEvents.trackOnLeave} name={'trackOnLeave'} type=\"checkbox\" />\n          onLeave\n        </label>\n        {evenDescription && <div>{evenDescription}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default EventParams;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.event-params {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .react-parallax-tilt {\n    @include background;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 350px;\n    height: 350px;\n    font-size: 28px;\n    font-style: italic;\n    background-color: darkgreen;\n    color: white;\n    border: 5px solid black;\n    border-radius: 20px;\n\n    .header {\n      margin-top: 12px;\n      font-size: 35px;\n      border-top: 2px solid white;\n      min-width: 200px;\n      text-align: center;\n    }\n  }\n\n  .event-type {\n    margin-top: 20px;\n    font-size: 20px;\n\n    div {\n      margin-top: 10px;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(EventParams_demozap,{})});_EventParams.displayName="_EventParams";class EventTiltAngle extends react.PureComponent{state={tiltAngleX:0,tiltAngleY:0};onMove=({tiltAngleX,tiltAngleY})=>{this.setState({tiltAngleX,tiltAngleY})};render(){const{tiltAngleX,tiltAngleY}=this.state;return(0,jsx_runtime.jsxs)("div",{className:"event-tilt-angle",children:[(0,jsx_runtime.jsx)(ReactParallaxTilt,{onMove:this.onMove,children:(0,jsx_runtime.jsx)(DefaultComponent,{})}),(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltAngleXManual:tiltAngleX,tiltAngleYManual:tiltAngleY,children:(0,jsx_runtime.jsxs)("div",{className:"component-tilt",children:["Component tilt:",(0,jsx_runtime.jsxs)("div",{className:"row",children:["x axis:",(0,jsx_runtime.jsxs)("div",{children:[tiltAngleX.toFixed(2),"°"]})]}),(0,jsx_runtime.jsxs)("div",{className:"row",children:["y axis:",(0,jsx_runtime.jsxs)("div",{children:[tiltAngleY.toFixed(2),"°"]})]})]})})]})}}EventTiltAngle.displayName="EventTiltAngle";const EventTiltAngle_demozap=EventTiltAngle,_EventTiltAngle=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React, { PureComponent } from 'react';\n\nimport Tilt, { OnMoveParams } from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\nimport './EventTiltAngle.demozap.scss';\n\nclass EventTiltAngle extends PureComponent {\n  state = {\n    tiltAngleX: 0,\n    tiltAngleY: 0,\n  };\n\n  onMove = ({ tiltAngleX, tiltAngleY }: OnMoveParams) => {\n    this.setState({ tiltAngleX, tiltAngleY });\n  };\n\n  render() {\n    const { tiltAngleX, tiltAngleY } = this.state;\n\n    return (\n      <div className=\"event-tilt-angle\">\n        <Tilt onMove={this.onMove}>\n          <DefaultComponent />\n        </Tilt>\n        <Tilt tiltAngleXManual={tiltAngleX} tiltAngleYManual={tiltAngleY}>\n          <div className=\"component-tilt\">\n            Component tilt:\n            <div className=\"row\">\n              x axis:<div>{tiltAngleX.toFixed(2)}°</div>\n            </div>\n            <div className=\"row\">\n              y axis:<div>{tiltAngleY.toFixed(2)}°</div>\n            </div>\n          </div>\n        </Tilt>\n      </div>\n    );\n  }\n}\n\nexport default EventTiltAngle;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.event-tilt-angle {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .component-tilt {\n    font-style: italic;\n    margin-top: 30px;\n    font-size: 24px;\n    text-align: center;\n    border: 2px solid black;\n    border-radius: 8px;\n    padding: 10px;\n\n    .row {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      margin-top: 10px;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(EventTiltAngle_demozap,{})});_EventTiltAngle.displayName="_EventTiltAngle";const lorem_picsum_namespaceObject=__webpack_require__.p+"static/media/lorem-picsum.7040958c.png",Page=({flipVertically,flipHorizontally,toggleFlipVertically,toggleFlipHorizontally})=>(0,jsx_runtime.jsxs)("div",{className:"page",children:[(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"Home"}),(0,jsx_runtime.jsx)("li",{children:"News"}),(0,jsx_runtime.jsx)("li",{children:"Contact"}),(0,jsx_runtime.jsx)("li",{children:"About"})]}),(0,jsx_runtime.jsxs)("div",{className:"content",children:[(0,jsx_runtime.jsxs)("div",{className:"controls",children:[(0,jsx_runtime.jsx)("div",{className:"title",children:(0,jsx_runtime.jsx)("div",{children:"Flip Page 👆"})}),(0,jsx_runtime.jsxs)("div",{className:"form",children:[(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:ev=>toggleFlipVertically(ev.target.checked),checked:flipVertically,type:"checkbox"}),"Vertically"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:ev=>toggleFlipHorizontally(ev.target.checked),checked:flipHorizontally,type:"checkbox"}),"Horizontally"]})]})]}),(0,jsx_runtime.jsx)("div",{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo const cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."}),(0,jsx_runtime.jsx)("img",{src:lorem_picsum_namespaceObject,alt:"pic"}),(0,jsx_runtime.jsx)("div",{children:"culpa qui officia deserunt mollit anim id est laborum.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."}),"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."]}),(0,jsx_runtime.jsxs)("div",{className:"contact-form",children:[(0,jsx_runtime.jsxs)("div",{className:"field",children:[(0,jsx_runtime.jsx)("div",{children:"Your Name"}),(0,jsx_runtime.jsx)("input",{type:"text",name:"name",placeholder:"Enter your name.."})]}),(0,jsx_runtime.jsxs)("div",{className:"field",children:[(0,jsx_runtime.jsx)("div",{children:"Country"}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",name:"country",defaultChecked:!0}),"Slovenia"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",name:"country"}),"Canada"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",name:"country"}),"USA"]})]}),(0,jsx_runtime.jsxs)("div",{className:"field",children:[(0,jsx_runtime.jsx)("div",{children:"Subject"}),(0,jsx_runtime.jsx)("textarea",{id:"subject",name:"subject",placeholder:"Write something.."})]}),(0,jsx_runtime.jsx)("input",{className:"field",type:"submit",value:"Submit"})]}),(0,jsx_runtime.jsxs)("div",{className:"footer",children:["© ",(new Date).getFullYear()," Footer.com"]})]});Page.displayName="Page";const FlipPage=()=>{const[[flipVertically,flipHorizontally],toggleFlip]=(0,react.useState)([!1,!1]);return(0,jsx_runtime.jsx)("div",{className:"flip-page",children:(0,jsx_runtime.jsx)(ReactParallaxTilt,{flipVertically,flipHorizontally,children:(0,jsx_runtime.jsx)(Page,{flipVertically,flipHorizontally,toggleFlipVertically:checked=>toggleFlip([checked,flipHorizontally]),toggleFlipHorizontally:checked=>toggleFlip([flipVertically,checked])})})})};FlipPage.displayName="FlipPage";const FlipPage_demozap=FlipPage,_FlipPage=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React, { useState } from 'react';\n\nimport Tilt from 'index';\n\nimport './FlipPage.demozap.scss';\nimport { Page } from './Page/Page';\n\nconst FlipPage = () => {\n  const [[flipVertically, flipHorizontally], toggleFlip] = useState([false, false]);\n\n  return (\n    <div className=\"flip-page\">\n      <Tilt flipVertically={flipVertically} flipHorizontally={flipHorizontally}>\n        <Page\n          flipVertically={flipVertically}\n          flipHorizontally={flipHorizontally}\n          toggleFlipVertically={(checked) => toggleFlip([checked, flipHorizontally])}\n          toggleFlipHorizontally={(checked) => toggleFlip([flipVertically, checked])}\n        />\n      </Tilt>\n    </div>\n  );\n};\n\nexport default FlipPage;\n",style:"body {\n  overflow-x: hidden;\n}\n\n.flip-page {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 80vw;\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(FlipPage_demozap,{})});_FlipPage.displayName="_FlipPage";const FlipVH=()=>{const[[flipVertically,flipHorizontally],toggleFlip]=(0,react.useState)([!1,!1]);return(0,jsx_runtime.jsx)(ReactParallaxTilt,{flipVertically,flipHorizontally,children:(0,jsx_runtime.jsxs)("div",{className:"flip-vh",children:[(0,jsx_runtime.jsxs)("div",{className:"header",children:[(0,jsx_runtime.jsx)("div",{children:"Toggle Axis"}),(0,jsx_runtime.jsx)("hr",{})]}),(0,jsx_runtime.jsxs)("div",{className:"form",children:[(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:ev=>toggleFlip([ev.target.checked,flipHorizontally]),checked:flipVertically,type:"checkbox"}),"Flip vertically"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:ev=>toggleFlip([flipVertically,ev.target.checked]),checked:flipHorizontally,type:"checkbox"}),"Flip horizontally"]})]})]})})};FlipVH.displayName="FlipVH";const FlipVH_demozap=FlipVH,_FlipVH=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:'import React, { useState } from \'react\';\n\nimport Tilt from \'index\';\nimport \'./FlipVH.demozap.scss\';\n\nconst FlipVH = () => {\n  const [[flipVertically, flipHorizontally], toggleFlip] = useState([false, false]);\n\n  return (\n    <Tilt flipVertically={flipVertically} flipHorizontally={flipHorizontally}>\n      <div className="flip-vh">\n        <div className="header">\n          <div>Toggle Axis</div>\n          <hr />\n        </div>\n        <div className="form">\n          <label>\n            <input\n              onChange={(ev) => toggleFlip([ev.target.checked, flipHorizontally])}\n              checked={flipVertically}\n              type="checkbox"\n            />\n            Flip vertically\n          </label>\n          <label>\n            <input\n              onChange={(ev) => toggleFlip([flipVertically, ev.target.checked])}\n              checked={flipHorizontally}\n              type="checkbox"\n            />\n            Flip horizontally\n          </label>\n        </div>\n      </div>\n    </Tilt>\n  );\n};\n\nexport default FlipVH;\n',style:"@import '../ReactParallaxTilt.scss';\n\n.flip-vh {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  font-size: 30px;\n  font-style: italic;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n  .header {\n    font-size: 38px;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    input {\n      transform: scale(1.5);\n      height: 20px;\n      margin-right: 7px;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(FlipVH_demozap,{})});_FlipVH.displayName="_FlipVH";const GlareEffect=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{glareEnable:!0,glareMaxOpacity:.8,glareColor:"#ffffff",glarePosition:"bottom",glareBorderRadius:"20px",children:(0,jsx_runtime.jsx)(DefaultComponent,{})});GlareEffect.displayName="GlareEffect";const GlareEffect_demozap=GlareEffect,_GlareEffect=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst GlareEffect = () => (\n  <Tilt glareEnable={true} glareMaxOpacity={0.8} glareColor=\"#ffffff\" glarePosition=\"bottom\" glareBorderRadius=\"20px\">\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default GlareEffect;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(GlareEffect_demozap,{})});_GlareEffect.displayName="_GlareEffect";const GlareEffect360=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{glareEnable:!0,glareMaxOpacity:.9,glareColor:"lightblue",glarePosition:"all",glareBorderRadius:"20px",children:(0,jsx_runtime.jsx)(DefaultComponent,{})});GlareEffect360.displayName="GlareEffect360";const GlareEffect360_demozap=GlareEffect360,_GlareEffect360=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst GlareEffect360 = () => (\n  <Tilt glareEnable={true} glareMaxOpacity={0.9} glareColor=\"lightblue\" glarePosition=\"all\">\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default GlareEffect360;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(GlareEffect360_demozap,{})});_GlareEffect360.displayName="_GlareEffect360";const GlareEffectNoTilt=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltEnable:!1,glareEnable:!0,glareMaxOpacity:.8,glareColor:"white",glarePosition:"bottom",glareBorderRadius:"20px",children:(0,jsx_runtime.jsx)(DefaultComponent,{})});GlareEffectNoTilt.displayName="GlareEffectNoTilt";const GlareEffectNoTilt_demozap=GlareEffectNoTilt,_GlareEffectNoTilt=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst GlareEffectNoTilt = () => (\n  <Tilt tiltEnable={false} glareEnable={true} glareMaxOpacity={0.8} glareColor=\"white\" glarePosition=\"bottom\">\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default GlareEffectNoTilt;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(GlareEffectNoTilt_demozap,{})});_GlareEffectNoTilt.displayName="_GlareEffectNoTilt";const Gyroscope=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{gyroscope:!0,tiltMaxAngleX:45,tiltMaxAngleY:45,children:(0,jsx_runtime.jsx)(DefaultComponent,{})});Gyroscope.displayName="Gyroscope";const Gyroscope_demozap=Gyroscope,_Gyroscope=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst Gyroscope = () => (\n  <Tilt gyroscope={true} tiltMaxAngleX={45} tiltMaxAngleY={45}>\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default Gyroscope;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(Gyroscope_demozap,{})});_Gyroscope.displayName="_Gyroscope";const InitialTilt_demozap_Default=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltAngleXInitial:20,tiltAngleYInitial:20,children:(0,jsx_runtime.jsx)(DefaultComponent,{})});InitialTilt_demozap_Default.displayName="Default";const InitialTilt_demozap=InitialTilt_demozap_Default,_InitialTilt=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst Default = () => (\n  <Tilt tiltAngleXInitial={20} tiltAngleYInitial={20}>\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default Default;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(InitialTilt_demozap,{})});_InitialTilt.displayName="_InitialTilt";const KeepFloating=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{reset:!1,children:(0,jsx_runtime.jsx)(DefaultComponent,{})});KeepFloating.displayName="KeepFloating";const KeepFloating_demozap=KeepFloating,_KeepFloating=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst KeepFloating = () => (\n  <Tilt reset={false}>\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default KeepFloating;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(KeepFloating_demozap,{})});_KeepFloating.displayName="_KeepFloating";const MultipleTilt=()=>(0,jsx_runtime.jsxs)("div",{className:"multiple-tilt",children:[(0,jsx_runtime.jsxs)("div",{className:"col",children:[(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})}),(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})})]}),(0,jsx_runtime.jsxs)("div",{className:"col",children:[(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})}),(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})})]})]});MultipleTilt.displayName="MultipleTilt";const MultipleTilt_demozap=MultipleTilt,_MultipleTilt=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport './MultipleTilt.demozap.scss';\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst MultipleTilt = () => (\n  <div className=\"multiple-tilt\">\n    <div className=\"col\">\n      <Tilt>\n        <DefaultComponent />\n      </Tilt>\n      <Tilt>\n        <DefaultComponent />\n      </Tilt>\n    </div>\n    <div className=\"col\">\n      <Tilt>\n        <DefaultComponent />\n      </Tilt>\n      <Tilt>\n        <DefaultComponent />\n      </Tilt>\n    </div>\n  </div>\n);\n\nexport default MultipleTilt;\n",style:".multiple-tilt {\n  display: flex;\n  flex-direction: row;\n\n  .col {\n    $spacing: 20px;\n    margin-right: $spacing;\n\n    :first-child {\n      margin-bottom: $spacing;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(MultipleTilt_demozap,{})});_MultipleTilt.displayName="_MultipleTilt";const MultipleTiltScroll=()=>(0,jsx_runtime.jsxs)("div",{className:"multiple-tilt-scroll",children:[(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})}),(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})}),(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})}),(0,jsx_runtime.jsx)(ReactParallaxTilt,{children:(0,jsx_runtime.jsx)(DefaultComponent,{})})]});MultipleTiltScroll.displayName="MultipleTiltScroll";const MultipleTiltScroll_demozap=MultipleTiltScroll,_MultipleTiltScroll=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport './MultipleTiltScroll.demozap.scss';\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst MultipleTiltScroll = () => (\n  <div className=\"multiple-tilt-scroll\">\n    <Tilt>\n      <DefaultComponent />\n    </Tilt>\n    <Tilt>\n      <DefaultComponent />\n    </Tilt>\n    <Tilt>\n      <DefaultComponent />\n    </Tilt>\n    <Tilt>\n      <DefaultComponent />\n    </Tilt>\n  </div>\n);\n\nexport default MultipleTiltScroll;\n",style:".multiple-tilt-scroll > * {\n  margin-bottom: 200px;\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(MultipleTiltScroll_demozap,{})});_MultipleTiltScroll.displayName="_MultipleTiltScroll";const ParallaxEffect=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{className:"parallax-effect",perspective:500,children:(0,jsx_runtime.jsxs)("div",{className:"inner-element",children:[(0,jsx_runtime.jsx)("div",{children:"React"}),(0,jsx_runtime.jsx)("div",{children:"Parallax Tilt"}),(0,jsx_runtime.jsx)("div",{children:"👀"})]})});ParallaxEffect.displayName="ParallaxEffect";const ParallaxEffect_demozap=ParallaxEffect,_ParallaxEffect=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\nimport './ParallaxEffect.demozap.scss';\n\nconst ParallaxEffect = () => (\n  <Tilt className=\"parallax-effect\" perspective={500}>\n    <div className=\"inner-element\">\n      <div>React</div>\n      <div>Parallax Tilt</div>\n      <div>👀</div>\n    </div>\n  </Tilt>\n);\n\nexport default ParallaxEffect;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.parallax-effect {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n\n  transform-style: preserve-3d;\n\n  .inner-element {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 35px;\n    font-style: italic;\n    color: white;\n    transform: translateZ(60px);\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(ParallaxEffect_demozap,{})});_ParallaxEffect.displayName="_ParallaxEffect";const ParallaxEffectGlareScale=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{className:"parallax-effect-glare-scale",perspective:500,glareEnable:!0,glareMaxOpacity:.45,scale:1.02,children:(0,jsx_runtime.jsxs)("div",{className:"inner-element",children:[(0,jsx_runtime.jsx)("div",{children:"React"}),(0,jsx_runtime.jsx)("div",{children:"Parallax Tilt"}),(0,jsx_runtime.jsx)("div",{children:"👀"})]})});ParallaxEffectGlareScale.displayName="ParallaxEffectGlareScale";const ParallaxEffectGlareScale_demozap=ParallaxEffectGlareScale,_ParallaxEffectGlareScale=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\nimport './ParallaxEffectGlareScale.demozap.scss';\n\nconst ParallaxEffectGlareScale = () => (\n  <Tilt\n    className=\"parallax-effect-glare-scale\"\n    perspective={500}\n    glareEnable={true}\n    glareMaxOpacity={0.45}\n    scale={1.02}\n  >\n    <div className=\"inner-element\">\n      <div>React</div>\n      <div>Parallax Tilt</div>\n      <div>👀</div>\n    </div>\n  </Tilt>\n);\n\nexport default ParallaxEffectGlareScale;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.parallax-effect-glare-scale {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n\n  transform-style: preserve-3d;\n\n  .inner-element {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 35px;\n    font-style: italic;\n    color: white;\n    transform: translateZ(60px);\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(ParallaxEffectGlareScale_demozap,{})});_ParallaxEffectGlareScale.displayName="_ParallaxEffectGlareScale";const tree_namespaceObject=__webpack_require__.p+"static/media/tree.278eeef8.png",ParallaxEffectImg=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{className:"parallax-effect-img",tiltMaxAngleX:40,tiltMaxAngleY:40,perspective:800,transitionSpeed:1500,scale:1.1,gyroscope:!0,children:(0,jsx_runtime.jsx)("img",{src:tree_namespaceObject,className:"inner-element",alt:"pic"})});ParallaxEffectImg.displayName="ParallaxEffectImg";const ParallaxEffectImg_demozap=ParallaxEffectImg,_ParallaxEffectImg=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport './ParallaxEffectImg.demozap.scss';\nimport imgTree from './img/tree.png';\n\nconst ParallaxEffectImg = () => (\n  <Tilt\n    className=\"parallax-effect-img\"\n    tiltMaxAngleX={40}\n    tiltMaxAngleY={40}\n    perspective={800}\n    transitionSpeed={1500}\n    scale={1.1}\n    gyroscope={true}\n  >\n    <img src={imgTree} className=\"inner-element\" alt=\"pic\" />\n  </Tilt>\n);\n\nexport default ParallaxEffectImg;\n",style:".parallax-effect-img {\n  transform-style: preserve-3d;\n  transform: perspective(1000px);\n  background-image: url('./img/background.jpg');\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  .inner-element {\n    transform: translateZ(40px) scale(0.8);\n    width: 70%;\n    margin-left: 25%;\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(ParallaxEffectImg_demozap,{})});_ParallaxEffectImg.displayName="_ParallaxEffectImg";const ReverseTilt=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltReverse:!0,children:(0,jsx_runtime.jsx)(DefaultComponent,{})});ReverseTilt.displayName="ReverseTilt";const ReverseTilt_demozap=ReverseTilt,_ReverseTilt=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport { DefaultComponent } from '../_DefaultComponent/DefaultComponent';\n\nconst ReverseTilt = () => (\n  <Tilt tiltReverse={true}>\n    <DefaultComponent />\n  </Tilt>\n);\n\nexport default ReverseTilt;\n",codeExt:"tsx",children:(0,jsx_runtime.jsx)(ReverseTilt_demozap,{})});_ReverseTilt.displayName="_ReverseTilt";const ScaleNoTilt=()=>{const[scale,setScale]=(0,react.useState)(1.3);return(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltEnable:!1,scale,transitionSpeed:2500,children:(0,jsx_runtime.jsxs)("div",{className:"scale-no-tilt",children:[(0,jsx_runtime.jsxs)("div",{className:"header",children:[(0,jsx_runtime.jsxs)("div",{children:["Scale x",scale]}),(0,jsx_runtime.jsx)("hr",{})]}),(0,jsx_runtime.jsx)("div",{className:"form",children:(0,jsx_runtime.jsx)("input",{type:"range",min:"0.7",max:"1.5",step:"0.01",value:scale,onChange:ev=>setScale(parseFloat(ev.target.value))})})]})})};ScaleNoTilt.displayName="ScaleNoTilt";const ScaleNoTilt_demozap=ScaleNoTilt,_ScaleNoTilt=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:'import React, { useState } from \'react\';\n\nimport Tilt from \'index\';\nimport \'./ScaleNoTilt.demozap.scss\';\n\nconst ScaleNoTilt = () => {\n  const [scale, setScale] = useState(1.3);\n\n  return (\n    <Tilt tiltEnable={false} scale={scale} transitionSpeed={2500}>\n      <div className="scale-no-tilt">\n        <div className="header">\n          <div>Scale x{scale}</div>\n          <hr />\n        </div>\n        <div className="form">\n          <input\n            type="range"\n            min="0.7"\n            max="1.5"\n            step="0.01"\n            value={scale}\n            onChange={(ev) => setScale(parseFloat(ev.target.value))}\n          />\n        </div>\n      </div>\n    </Tilt>\n  );\n};\n\nexport default ScaleNoTilt;\n',style:"@import '../ReactParallaxTilt.scss';\n\n.scale-no-tilt {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  font-size: 30px;\n  font-style: italic;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n  .header {\n    font-size: 38px;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    input {\n      transform: scale(1.5);\n      height: 20px;\n      margin-right: 7px;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(ScaleNoTilt_demozap,{})});_ScaleNoTilt.displayName="_ScaleNoTilt";const TiltDisableAxis=()=>{const[axisEnabled,toggleAxis]=(0,react.useState)("x");return(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltAxis:axisEnabled,children:(0,jsx_runtime.jsxs)("div",{className:"tilt-disable-axis",children:[(0,jsx_runtime.jsxs)("div",{className:"header",children:[(0,jsx_runtime.jsx)("div",{children:"Toggle Axis"}),(0,jsx_runtime.jsx)("hr",{})]}),(0,jsx_runtime.jsxs)("div",{className:"form",children:[(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:ev=>toggleAxis(ev.target.value),value:"x",checked:"x"===axisEnabled,type:"radio"}),"Enable x axis"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{onChange:ev=>toggleAxis(ev.target.value),value:"y",checked:"y"===axisEnabled,type:"radio"}),"Enable y axis"]})]})]})})};TiltDisableAxis.displayName="TiltDisableAxis";const TiltDisableAxis_demozap=TiltDisableAxis,_TiltDisableAxis=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React, { useState } from 'react';\n\nimport Tilt, { Axis } from 'index';\n\nimport './TiltDisableAxis.demozap.scss';\n\nconst TiltDisableAxis = () => {\n  const [axisEnabled, toggleAxis] = useState<Axis>('x');\n\n  return (\n    <Tilt tiltAxis={axisEnabled}>\n      <div className=\"tilt-disable-axis\">\n        <div className=\"header\">\n          <div>Toggle Axis</div>\n          <hr />\n        </div>\n        <div className=\"form\">\n          <label>\n            <input\n              onChange={(ev) => toggleAxis(ev.target.value as Axis)}\n              value={'x'}\n              checked={axisEnabled === 'x'}\n              type=\"radio\"\n            />\n            Enable x axis\n          </label>\n          <label>\n            <input\n              onChange={(ev) => toggleAxis(ev.target.value as Axis)}\n              value={'y'}\n              checked={axisEnabled === 'y'}\n              type=\"radio\"\n            />\n            Enable y axis\n          </label>\n        </div>\n      </div>\n    </Tilt>\n  );\n};\n\nexport default TiltDisableAxis;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.tilt-disable-axis {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  font-size: 30px;\n  font-style: italic;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n  .header {\n    font-size: 38px;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    input {\n      transform: scale(1.5);\n      height: 20px;\n      margin-right: 7px;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(TiltDisableAxis_demozap,{})});_TiltDisableAxis.displayName="_TiltDisableAxis";const nyc_namespaceObject=__webpack_require__.p+"static/media/nyc.b07a9ff6.jpg",TiltImg=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{className:"tilt-img",tiltMaxAngleX:35,tiltMaxAngleY:35,perspective:900,scale:1.1,transitionSpeed:2e3,gyroscope:!0,children:(0,jsx_runtime.jsx)("img",{src:nyc_namespaceObject,className:"inner-element",alt:"pic"})});TiltImg.displayName="TiltImg";const TiltImg_demozap=TiltImg,_TiltImg=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\n\nimport './TiltImg.demozap.scss';\nimport imgNyc from './img/nyc.jpg';\n\nconst TiltImg = () => (\n  <Tilt\n    className=\"tilt-img\"\n    tiltMaxAngleX={35}\n    tiltMaxAngleY={35}\n    perspective={900}\n    scale={1.1}\n    transitionSpeed={2000}\n    gyroscope={true}\n  >\n    <img src={imgNyc} className=\"inner-element\" alt=\"pic\" />\n  </Tilt>\n);\n\nexport default TiltImg;\n",style:".tilt-img {\n  .inner-element {\n    width: 70vw;\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(TiltImg_demozap,{})});_TiltImg.displayName="_TiltImg";var lib=__webpack_require__("./node_modules/react-joystick-component/build/lib/index.js");const TiltManualInput=()=>{const[[manualTiltAngleX,manualTiltAngleY],setManualTiltAngle]=(0,react.useState)([0,0]);return(0,jsx_runtime.jsxs)("div",{className:"tilt-manual-input",children:[(0,jsx_runtime.jsx)(ReactParallaxTilt,{tiltAngleXManual:manualTiltAngleX,tiltAngleYManual:manualTiltAngleY,glareEnable:!0,children:(0,jsx_runtime.jsxs)("div",{className:"react-parallax-tilt",children:[(0,jsx_runtime.jsxs)("div",{children:["Axis x: ",manualTiltAngleX.toFixed(0),"°"]}),(0,jsx_runtime.jsxs)("div",{children:["Axis y: ",manualTiltAngleY.toFixed(0),"°"]})]})}),(0,jsx_runtime.jsx)("div",{className:"manual-input",children:(0,jsx_runtime.jsx)(lib.Tj,{baseColor:"darkgreen",stickColor:"black",move:stick=>{setManualTiltAngle([stick.y?100*stick.y:0,stick.x?100*stick.x:0])},stop:()=>{setManualTiltAngle([0,0])}})})]})};TiltManualInput.displayName="TiltManualInput";const TiltManualInput_demozap=TiltManualInput,_TiltManualInput=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React, { useState } from 'react';\nimport { Joystick } from 'react-joystick-component';\nimport { IJoystickUpdateEvent } from 'react-joystick-component/build/lib/Joystick';\n\nimport Tilt from 'index';\nimport './TiltManualInput.demozap.scss';\n\nconst TiltManualInput = () => {\n  const [[manualTiltAngleX, manualTiltAngleY], setManualTiltAngle] = useState([0, 0]);\n\n  const onMove = (stick: IJoystickUpdateEvent) => {\n    setManualTiltAngle([stick.y ? stick.y * 100 : 0, stick.x ? stick.x * 100 : 0]);\n  };\n\n  const onStop = () => {\n    setManualTiltAngle([0, 0]);\n  };\n\n  return (\n    <div className=\"tilt-manual-input\">\n      <Tilt tiltAngleXManual={manualTiltAngleX} tiltAngleYManual={manualTiltAngleY} glareEnable={true}>\n        <div className=\"react-parallax-tilt\">\n          <div>Axis x: {manualTiltAngleX.toFixed(0)}°</div>\n          <div>Axis y: {manualTiltAngleY.toFixed(0)}°</div>\n        </div>\n      </Tilt>\n      <div className=\"manual-input\">\n        <Joystick baseColor=\"darkgreen\" stickColor=\"black\" move={onMove} stop={onStop} />\n      </div>\n    </div>\n  );\n};\n\nexport default TiltManualInput;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.tilt-manual-input {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .react-parallax-tilt {\n    @include background;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 300px;\n    height: 300px;\n    font-size: 35px;\n    font-style: italic;\n    background-color: darkgreen;\n    color: white;\n    border: 5px solid black;\n    border-radius: 20px;\n  }\n\n  .manual-input {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-top: 20px;\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(TiltManualInput_demozap,{})});_TiltManualInput.displayName="_TiltManualInput";const TiltScale=()=>{const[scale,setScale]=(0,react.useState)(1.15);return(0,jsx_runtime.jsx)(ReactParallaxTilt,{scale,transitionSpeed:2500,children:(0,jsx_runtime.jsxs)("div",{className:"tilt-scale",children:[(0,jsx_runtime.jsxs)("div",{className:"header",children:[(0,jsx_runtime.jsxs)("div",{children:["Scale x",scale]}),(0,jsx_runtime.jsx)("hr",{})]}),(0,jsx_runtime.jsx)("div",{className:"form",children:(0,jsx_runtime.jsx)("input",{type:"range",min:"0.7",max:"1.5",step:"0.01",value:scale,onChange:ev=>setScale(parseFloat(ev.target.value))})})]})})};TiltScale.displayName="TiltScale";const TiltScale_demozap=TiltScale,_TiltScale=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:'import React, { useState } from \'react\';\n\nimport Tilt from \'index\';\nimport \'./TiltScale.demozap.scss\';\n\nconst TiltScale = () => {\n  const [scale, setScale] = useState(1.15);\n\n  return (\n    <Tilt scale={scale} transitionSpeed={2500}>\n      <div className="tilt-scale">\n        <div className="header">\n          <div>Scale x{scale}</div>\n          <hr />\n        </div>\n        <div className="form">\n          <input\n            type="range"\n            min="0.7"\n            max="1.5"\n            step="0.01"\n            value={scale}\n            onChange={(ev) => setScale(parseFloat(ev.target.value))}\n          />\n        </div>\n      </div>\n    </Tilt>\n  );\n};\n\nexport default TiltScale;\n',style:"@import '../ReactParallaxTilt.scss';\n\n.tilt-scale {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  font-size: 30px;\n  font-style: italic;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n\n  .header {\n    font-size: 38px;\n  }\n\n  .form {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    input {\n      transform: scale(1.5);\n      height: 20px;\n      margin-right: 7px;\n    }\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(TiltScale_demozap,{})});_TiltScale.displayName="_TiltScale";const TrackOnWindow=()=>(0,jsx_runtime.jsx)(ReactParallaxTilt,{className:"track-on-window",perspective:500,glareEnable:!0,glareMaxOpacity:.75,glarePosition:"all",scale:1.02,trackOnWindow:!0,children:(0,jsx_runtime.jsxs)("div",{className:"inner-element",children:[(0,jsx_runtime.jsx)("div",{children:"React"}),(0,jsx_runtime.jsx)("div",{children:"Parallax Tilt"}),(0,jsx_runtime.jsx)("div",{children:"👀"})]})});TrackOnWindow.displayName="TrackOnWindow";const TrackOnWindow_demozap=TrackOnWindow,_TrackOnWindow=()=>(0,jsx_runtime.jsx)(index_esm.V,{code:"import React from 'react';\n\nimport Tilt from 'index';\nimport './TrackOnWindow.demozap.scss';\n\nconst TrackOnWindow = () => (\n  <Tilt\n    className=\"track-on-window\"\n    perspective={500}\n    glareEnable={true}\n    glareMaxOpacity={0.75}\n    glarePosition=\"all\"\n    scale={1.02}\n    trackOnWindow={true}\n  >\n    <div className=\"inner-element\">\n      <div>React</div>\n      <div>Parallax Tilt</div>\n      <div>👀</div>\n    </div>\n  </Tilt>\n);\n\nexport default TrackOnWindow;\n",style:"@import '../ReactParallaxTilt.scss';\n\n.track-on-window {\n  @include background;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  background-color: darkgreen;\n  color: white;\n  border: 5px solid black;\n  border-radius: 20px;\n\n  transform-style: preserve-3d;\n\n  .inner-element {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 35px;\n    font-style: italic;\n    color: white;\n    transform: translateZ(60px);\n  }\n}\n",codeExt:"tsx",styleExt:"scss",children:(0,jsx_runtime.jsx)(TrackOnWindow_demozap,{})});_TrackOnWindow.displayName="_TrackOnWindow";const ReactParallaxTilt_stories={title:"React Parallax Tilt",decorators:[Story=>(0,jsx_runtime.jsx)("div",{className:"root-story",children:(0,jsx_runtime.jsx)(Story,{})})]},ReactParallaxTilt_stories_Default={render:()=>(0,jsx_runtime.jsx)(_Default,{})},ReactParallaxTilt_stories_KeepFloating={render:()=>(0,jsx_runtime.jsx)(_KeepFloating,{}),name:"Keep floating"},ReactParallaxTilt_stories_ReverseTilt={render:()=>(0,jsx_runtime.jsx)(_ReverseTilt,{}),name:"Reverse tilt"},Scale={render:()=>(0,jsx_runtime.jsx)(_TiltScale,{})},ReactParallaxTilt_stories_ScaleNoTilt={render:()=>(0,jsx_runtime.jsx)(_ScaleNoTilt,{}),name:"Scale - No tilt"},ReactParallaxTilt_stories_TiltDisableAxis={render:()=>(0,jsx_runtime.jsx)(_TiltDisableAxis,{}),name:"Disable x/y axis"},InitialTilt={render:()=>(0,jsx_runtime.jsx)(_InitialTilt,{}),name:"Initial tilt"},ReactParallaxTilt_stories_FlipVH={render:()=>(0,jsx_runtime.jsx)(_FlipVH,{}),name:"Flip vertically/horizontally"},ReactParallaxTilt_stories_FlipPage={render:()=>(0,jsx_runtime.jsx)(_FlipPage,{}),name:"Flip page"},ReactParallaxTilt_stories_ParallaxEffect={render:()=>(0,jsx_runtime.jsx)(_ParallaxEffect,{}),name:"Parallax effect"},ReactParallaxTilt_stories_ParallaxEffectGlareScale={render:()=>(0,jsx_runtime.jsx)(_ParallaxEffectGlareScale,{}),name:"Parallax effect - Glare & Scale"},ReactParallaxTilt_stories_ParallaxEffectImg={render:()=>(0,jsx_runtime.jsx)(_ParallaxEffectImg,{}),name:"Parallax effect image"},ReactParallaxTilt_stories_TiltImg={render:()=>(0,jsx_runtime.jsx)(_TiltImg,{}),name:"Tilt image"},ReactParallaxTilt_stories_GlareEffect={render:()=>(0,jsx_runtime.jsx)(_GlareEffect,{}),name:"Glare effect"},ReactParallaxTilt_stories_GlareEffectNoTilt={render:()=>(0,jsx_runtime.jsx)(_GlareEffectNoTilt,{}),name:"Glare effect - No tilt"},ReactParallaxTilt_stories_GlareEffect360={render:()=>(0,jsx_runtime.jsx)(_GlareEffect360,{}),name:"Glare effect - 360"},ReactParallaxTilt_stories_TrackOnWindow={render:()=>(0,jsx_runtime.jsx)(_TrackOnWindow,{}),name:"Track on window"},ReactParallaxTilt_stories_TiltManualInput={render:()=>(0,jsx_runtime.jsx)(_TiltManualInput,{}),name:"Tilt manual input"},ReactParallaxTilt_stories_Gyroscope={render:()=>(0,jsx_runtime.jsx)(_Gyroscope,{}),name:"Gyroscope tilt"},ReactParallaxTilt_stories_MultipleTilt={render:()=>(0,jsx_runtime.jsx)(_MultipleTilt,{}),name:"Multiple tilt"},ReactParallaxTilt_stories_MultipleTiltScroll={render:()=>(0,jsx_runtime.jsx)(_MultipleTiltScroll,{}),name:"Multiple tilt - Scroll"},ReactParallaxTilt_stories_EventTiltAngle={render:()=>(0,jsx_runtime.jsx)(_EventTiltAngle,{}),name:"Event - Tilt angle"},ReactParallaxTilt_stories_EventParams={render:()=>(0,jsx_runtime.jsx)(_EventParams,{}),name:"Event - Params"},__namedExportsOrder=["Default","KeepFloating","ReverseTilt","Scale","ScaleNoTilt","TiltDisableAxis","InitialTilt","FlipVH","FlipPage","ParallaxEffect","ParallaxEffectGlareScale","ParallaxEffectImg","TiltImg","GlareEffect","GlareEffectNoTilt","GlareEffect360","TrackOnWindow","TiltManualInput","Gyroscope","MultipleTilt","MultipleTiltScroll","EventTiltAngle","EventParams"]}}]);